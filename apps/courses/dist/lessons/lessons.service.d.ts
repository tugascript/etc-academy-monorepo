import { EntityRepository } from '@mikro-orm/postgresql';
import { CommonService } from '../common';
import { LocalMessageType } from '../common/entities/gql';
import { IPaginated } from '../common/interfaces';
import { ProfilesService } from '../profiles/profiles.service';
import { FilterLessonsDto } from './dtos/filter-lessons.dto';
import { LessonDto } from './dtos/lesson.dto';
import { UpdateLessonLinkDto } from './dtos/update-lesson-link.dto';
import { UpdateLessonTimeDto } from './dtos/update-lesson-time.dto';
import { UpdateLessonTitleDto } from './dtos/update-lesson-title.dto';
import { UpdateLessonTypeDto } from './dtos/update-lesson-type.dto';
import { LessonEntity } from './entities/lesson.entity';
import { CreateLessonInput } from './inputs/create-lesson.input';
export declare class LessonsService {
    private readonly lessonsRepository;
    private readonly profilesService;
    private readonly commonService;
    constructor(lessonsRepository: EntityRepository<LessonEntity>, profilesService: ProfilesService, commonService: CommonService);
    createLesson(userId: number, { courseId, lessonType, title, time, link }: CreateLessonInput): Promise<LessonEntity>;
    updateLessonTime(userId: number, { courseId, lessonId, time }: UpdateLessonTimeDto): Promise<LessonEntity>;
    updateLessonTitle(userId: number, { courseId, lessonId, title }: UpdateLessonTitleDto): Promise<LessonEntity>;
    updateLessonType(userId: number, { courseId, lessonId, lessonType, link }: UpdateLessonTypeDto): Promise<LessonEntity>;
    updateLessonLink(userId: number, { courseId, lessonId, link }: UpdateLessonLinkDto): Promise<LessonEntity>;
    deleteLesson(userId: number, { courseId, lessonId }: LessonDto): Promise<LocalMessageType>;
    lessonById(userId: number, { lessonId, courseId }: LessonDto): Promise<LessonEntity>;
    filterLessons(userId: number, { courseId, order, first, after }: FilterLessonsDto): Promise<IPaginated<LessonEntity>>;
    lessonByIdWithManager(lessonId: number): Promise<LessonEntity>;
    private getLessonById;
    private checkProfile;
    private checkLessonForUpdate;
}
